<!DOCTYPE html>
<html lang="fr">
<%

  const GLOBAL_TITLE = 'Rout-Ine';

  const INC_OPT = {
    globalTitle: GLOBAL_TITLE,
    title: 'Importation Planning'
  };
%>

  <head>
    <%-
        include('partials/head.ejs', INC_OPT)
      %>
      <script type="text/javascript">
      'use strict';
      /*
      Strict mode makes several changes to normal JavaScript semantics.
      First, strict mode eliminates some JavaScript silent errors by changing them to throw errors.
      Second, strict mode fixes mistakes that make it difficult for JavaScript engines to perform optimizations:
      strict mode code can sometimes be made to run faster than identical code that's not strict mode.
      Third, strict mode prohibits some syntax likely to be defined in future versions of ECMAScript.
      */

      // execute le javascript quand la page est completement chargee
      $(document).ready(function() {

        $('nav #uploadPlanningLink').addClass('active');

        $('#importSchedule').prop("disabled", true);
        $('#importError').hide();
        $('#importOngoing').hide();
        $('#importSuccess').hide();

        const csvParse = require('csv-parse');

        $('#inputSchedule').change(function() {

          $('#importSuccess').hide();
          $('#importError').hide();

          let schedule = this.files[0];

          let reader = new FileReader();

          reader.readAsText(schedule, 'Windows-1252');

          reader.onloadend = function() {

            utils.parseSchedule(reader.result)
              .then((beneficiariesList) => {

                let allDates = [];

                for (let name in beneficiariesList.beneficiaries) {

                  let benef = beneficiariesList.beneficiaries[name];

                  for (let d of benef.deliveries) {

                    allDates.push(utils.parseDateTime(d));

                  }

                }

                allDates.sort((a, b) => {

                  let parse = function(dateObject) {

                    let parsedDate = {
                      year: dateObject.getFullYear(),
                      month: dateObject.getMonth(),
                      date: dateObject.getDate()
                    };

                    return parsedDate;

                  }

                  let aParsed = parse(a);
                  let bParsed = parse(b);

                  if (aParsed.year != bParsed.year)
                    return aParsed.year - bParsed.year;
                  else if (aParsed.month != bParsed.month)
                    return aParsed.month - bParsed.month;
                  else
                    return aParsed.date - bParsed.date;

                });

                let firstDate = $('<strong>').text(allDates[0].toLocaleDateString()).css('color', 'black');
                let lastdate = $('<strong>').text(allDates[allDates.length - 1].toLocaleDateString()).css('color', 'black');

                $('#importSchedule').prop("disabled", false);
                $('#importSchedule').text('Importer le planning du ').append(firstDate).append(' au ').append(lastdate);

              });

          };

        });

        $('#importSchedule').click(function() {

          $('#importSchedule').prop("disabled", true);
          $('#importOngoing').show();

          var form = $('#formSchedule')[0];

          // Create an FormData object
          var data = new FormData(form);

          $.ajax({
            type: "POST",
            enctype: 'multipart/form-data',
            url: "scheduleUpload",
            data: data,
            processData: false,
            contentType: false,
            cache: false,
            timeout: 600000,
            success: function(data) {

              console.log("received : ", data);

              let socket = io.connect();

              socket.emit('parseSchedule');

              socket.on('percent', function(value) {

                console.log('received percent');

                $('#importOngoing .progress-bar').css('width', value + '%');
                $('#importOngoing .progress-bar > .sr-only').text(value + '% Complete');

              });

              socket.on('scheduleProcessed', function(value) {

                $('#importOngoing').hide();
                $('#importSuccess').show();

              });

            },
            error: function(e) {

              // $("#result").text(e.responseText);
              console.log("ERROR : ", e);
              $('#importError').show();
              $('#importOngoing').hide();
              // $("#btnSubmit").prop("disabled", false);

            }
          });

        });

      });
      </script>
  </head>

  <body>
    <%- include('partials/header.ejs', INC_OPT) %>
      <div class="container">
        <div class="row main-upload-planning" id="main">
          <div class="col-xs-12">
            <form id='formSchedule' enctype='multipart/form-data' method='post'>
              <div class="form-group">
                <label for="inputSchedule">Sélection du planning</label>
                <input type="file" id="inputSchedule" name="inputSchedule">
              </div>
              <button id="importSchedule" class="btn btn-success" type="button">Importer</button>
              <div id="importOngoing" class="alert alert-info" role="alert">Import en cours
                <div class="progress">
                  <div class="progress-bar progress-bar-info progress-bar-striped" role="progressbar" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
                    <span class="sr-only">0% Complete</span>
                  </div>
                </div>
              </div>
              <div id="importError" class="alert alert-danger" role="alert">Erreur pendant l'import</div>
              <div id="importSuccess" class="alert alert-success" role="alert">Planning importé avec succès</div>
            </form>
          </div>
        </div>
      </div>
  </body>

</html>
