<!DOCTYPE html>
<html lang="fr">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
  <title>Localisation bénéficiaires - Calcul des tournées</title>
  <script src='csv-parse.js'></script>
  <script src="jquery-latest.min.js"></script>
  <script type="text/javascript" src="utils.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <!-- Leaflet -->
  <link rel="stylesheet" href="leaflet/leaflet.css">
  <script src="leaflet/leaflet.js"></script>
  <!-- -->
  <!-- Bootstrap -->
  <link href="bootstrap-3.3.7-dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="bootstrap-3.3.7-dist/js/bootstrap.min.js"></script>
  <!-- -->
  <link rel="stylesheet" href="style.css">
  <script src='common.js'></script>
  <script src='mapFunctions.js'></script>
  <script type="text/javascript">
  'use strict';
  /*
  Strict mode makes several changes to normal JavaScript semantics.
  First, strict mode eliminates some JavaScript silent errors by changing them to throw errors.
  Second, strict mode fixes mistakes that make it difficult for JavaScript engines to perform optimizations:
  strict mode code can sometimes be made to run faster than identical code that's not strict mode.
  Third, strict mode prohibits some syntax likely to be defined in future versions of ECMAScript.
  */

  // execute le javascript quand la page est completement chargee
  $(document).ready(function() {

    const csvParse = require('csv-parse');

    $('#inputSchedule').change(function() {

      let schedule = this.files[0];

      let reader = new FileReader();

      reader.readAsText(schedule, 'Windows-1252');

      reader.onloadend = function() {

        csvParse(reader.result, {
          delimiter: ";"
        }, function(err, output) {

          console.log(output);

        });

      };

    });


  });
  </script>
</head>

<body>
  <header>
    <h1><a href="index.html">Importer un planning</a></h1>
    <%- include('nav.ejs') %>
  </header>
  <div class="container">
    <div class="row">
      <div class="col-xs-12">
        <form id='formSchedule'>
          <div class="form-group">
            <label for="inputSchedule">Sélection du planning</label>
            <input type="file" id="inputSchedule" name="inputSchedule">
          </div>
          <button id="startGa" class="btn btn-success" type="button">Valider l'importation</button>
        </form>
      </div>
    </div>
  </div>
</body>

</html>